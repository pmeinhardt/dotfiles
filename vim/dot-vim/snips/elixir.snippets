# Elixir

snippet #! "#!/usr/bin/env elixir" b
#!/usr/bin/env elixir
$0
endsnippet

snippet defmodule "defmodule" b
defmodule ${1:A} do
	$0
end
endsnippet

snippet def "def" b
def ${1:f} do
	$0
end
endsnippet

snippet defp "defp" b
defp ${1:f} do
	$0
end
endsnippet

snippet fn "fn" w
fn $1-> ${2:nil} end$0
endsnippet

snippet do "do" w
do
	$0
end
endsnippet

snippet case "case" w
case ${1:value} do
	${2:_} ->
		${3:nil}

	${4:other} ->
		${0:$4}
end
endsnippet

snippet with "with" w
with ${1::ok} <- ${2:expression} do
	$0
end
endsnippet

# ExUnit

snippet describe "describe" b
describe "$1" do
	$0
end
endsnippet

snippet test "test" b
test "$1" do
	$0
end
endsnippet
