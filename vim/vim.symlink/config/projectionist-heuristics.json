{
  "package-lock.json": {
    "*": {
      "make": "TERM=dumb npm"
    },
    "**.test.*": {
      "dispatch": "TERM=dumb npm test {file}"
    }
  },

  "yarn.lock": {
    "*": {
      "make": "TERM=dumb yarn"
    },
    "**.test.*": {
      "dispatch": "TERM=dumb yarn test {file}"
    }
  },

  "package.json": {
    "*": {
      "console": "node"
    },
    "*.js": {
      "alternate": "{}.test.js",
      "type": "source"
    },
    "*.jsx": {
      "alternate": "{}.test.jsx",
      "type": "source",
      "template": [
        "export function {basename|camelcase|capitalize}() {open}",
        "  return null;",
        "{close}"
      ]
    },
    "*.ts": {
      "alternate": "{}.test.ts",
      "type": "source"
    },
    "*.tsx": {
      "alternate": "{}.test.tsx",
      "type": "source",
      "template": [
        "export type {basename|camelcase|capitalize}Props = {open}{close};",
        "",
        "export function {basename|camelcase|capitalize}(_: {basename|camelcase|capitalize}Props) {open}",
        "  return null;",
        "{close}"
      ]
    },
    "*.test.js": {
      "alternate": "{}.js",
      "type": "test",
      "template": [
        "import {open} {basename|camelcase} {close} from \"./{basename}\";",
        "",
        "describe(\"{basename|camelcase}\", () => {open}",
        "  // function subject(...args) {open}",
        "  //   return {basename}(...args);",
        "  // {close}",
        "{close});"
      ]
    },
    "*.test.jsx": {
      "alternate": "{}.jsx",
      "type": "test",
      "template": [
        "import {open} render {close} from \"@testing-library/react\";",
        "",
        "import {open} {basename|camelcase|capitalize} {close} from \"./{basename}\";",
        "",
        "describe(\"{basename|camelcase|capitalize}\", () => {",
        "  function subject(overrides) {open}",
        "    const defaults = {open} /* provide defaults */ {close};",
        "    const props = {open} ...defaults, ...overrides {close};",
        "    return render(<{basename|camelcase|capitalize} {open}...props{close} />);",
        "  {close}",
        "});"
      ]
    },
    "*.test.ts": {
      "alternate": "{}.ts",
      "type": "test",
      "template": [
        "import {open} {basename|camelcase} {close} from \"./{basename}\";",
        "",
        "describe(\"{basename|camelcase}\", () => {open}",
        "  // function subject(...args) {open}",
        "  //   return {basename}(...args);",
        "  // {close}",
        "{close});"
      ]
    },
    "*.test.tsx": {
      "alternate": "{}.tsx",
      "type": "test",
      "template": [
        "import {open} render {close} from \"@testing-library/react\";",
        "",
        "import type {open} Props {close} from \"./{basename}\";",
        "import {open} {basename|camelcase|capitalize} {close} from \"./{basename}\";",
        "",
        "describe(\"{basename|camelcase|capitalize}\", () => {",
        "  function subject(overrides: Partial<{basename|camelcase|capitalize}Props>) {open}",
        "    const defaults: {basename|camelcase|capitalize}Props = {open} /* provide defaults */ {close};",
        "    const props = {open} ...defaults, ...overrides {close};",
        "    return render(<{basename|camelcase|capitalize} {open}...props{close} />);",
        "  {close}",
        "});"
      ]
    }
  },

  "elm.json": {
    "src/*.elm": {
      "type": "source",
      "template": [
        "module {dot} exposing (..)"
      ]
    }
  },

  "mix.exs": {
    "*": {
      "console": "iex -S mix",
      "make": "mix"
    },
    "lib/*.ex": {
      "alternate": "test/{}_test.exs",
      "type": "source",
      "template": [
        "defmodule {camelcase|capitalize|dot} do",
        "end"
      ]
    },
    "test/*_test.exs": {
      "alternate": "lib/{}.ex",
      "type": "test",
      "dispatch": "mix test {file}",
      "template": [
        "defmodule {camelcase|capitalize|dot}Test do",
        "  use ExUnit.Case, async: true",
        "",
        "  alias {camelcase|capitalize|dot}",
        "end"
      ]
    }
  },

  "build.gradle.kts": {
    "*": {
      "make": "./gradlew"
    },
    "src/main/kotlin/*.kt": {
      "alternate": "src/test/kotlin/{}Test.kt",
      "type": "source",
      "template": [
        "package {dirname|snakecase|dot}"
      ]
    },
    "src/test/kotlin/*Test.kt": {
      "alternate": "src/main/kotlin/{}.kt",
      "type": "test",
      "template": [
        "package {dirname|snakecase|dot}"
      ]
    }
  }
}
